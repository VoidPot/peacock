datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int           @id @default(autoincrement())
  mobileNumber    String        @unique
  email           String?
  firstName       String?
  lastName        String?
  nickName        String        @unique
  avatar          String?
  type            USER_TYPE     @default(MEMBER)
  joinedAt        DateTime      @default(now())
  password        Extra?
  links           Link[]
  transactionFrom Transaction[] @relation("from")
  transactionTo   Transaction[] @relation("to")
  passbook        Passbook      @relation(fields: [passbookId], references: [id])
  passbookId      Int           @unique
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deleted         Boolean       @default(false)
  deletedAt       DateTime?
}

enum USER_TYPE {
  MEMBER
  VENDOR
}

model Extra {
  password       String?
  passcode       String?
  mobileVerified Boolean   @default(false)
  isPasswordSet  Boolean   @default(false)
  isPasscodeSet  Boolean   @default(false)
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         Int       @unique
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deleted        Boolean   @default(false)
  deletedAt      DateTime?
}

model Group {
  id           Int           @id @default(autoincrement())
  name         String
  slug         String        @unique
  amount       Float         @default(0)
  period       PERIOD        @default(MONTH)
  startAt      DateTime      @default(now())
  endAt        DateTime?
  links        Link[]
  transactions Transaction[]
  passbook     Passbook      @relation(fields: [passbookId], references: [id])
  passbookId   Int           @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  deleted      Boolean       @default(false)
  deletedAt    DateTime?
}

enum PERIOD {
  DAY
  WEEK
  MONTH
  YEAR
}

model Link {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  group     Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deleted   Boolean   @default(false)
  deletedAt DateTime?

  @@unique([userId, groupId])
}

model Transaction {
  id        Int                @id @default(autoincrement())
  type      TRANSACTION_TYPE   @default(DEPOSIT)
  method    TRANSACTION_METHOD @default(ACCOUNT)
  mode      TRANSACTION_MODE   @default(MEMBERS_PERIODIC_DEPOSIT)
  dot       DateTime           @default(now())
  amount    Float              @default(0)
  from      User               @relation(name: "from", fields: [fromId], references: [id])
  fromId    Int
  to        User               @relation(name: "to", fields: [toId], references: [id])
  toId      Int
  group     Group?             @relation(fields: [groupId], references: [id])
  groupId   Int?
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  deleted   Boolean            @default(false)
  deletedAt DateTime?
}

enum TRANSACTION_TYPE {
  TRANSFER
  DEPOSIT
  WITHDRAWAL
}

enum TRANSACTION_METHOD {
  CASH
  ACCOUNT
  UPI
  BANK
}

enum TRANSACTION_MODE {
  MEMBERS_PERIODIC_DEPOSIT
  MEMBERS_WITHDRAW
  NEW_MEMBER_PAST_TALLY
  INTER_CASH_TRANSFER
  VENDOR_PERIODIC_INVEST
  VENDOR_PERIODIC_RETURN
  VENDOR_INVEST
  VENDOR_RETURN
  OTHER_EXPENDITURE
  MEMBER_EXIT_WITHDRAW
  MEMBER_EXIT_PROFIT_WITHDRAW
}

model Passbook {
  id      Int               @id @default(autoincrement())
  entryOf PASSBOOK_ENTRY_OF @default(CLUB)

  termDeposit  Float @default(0)
  deposit      Float @default(0)
  totalDeposit Float @default(0)

  termWithdraw   Float @default(0)
  withdraw       Float @default(0)
  profitWithdraw Float @default(0)
  totalWithdraw  Float @default(0)

  termInvest  Float @default(0)
  invest      Float @default(0)
  totalInvest Float @default(0)

  termReturns  Float @default(0)
  returns      Float @default(0)
  totalReturns Float @default(0)

  accountBalance Float @default(0)
  holdingAmount  Float @default(0)

  depositMonths  Float @default(0)
  withdrawMonths Float @default(0)
  investMonths   Float @default(0)
  returnsMonths  Float @default(0)

  user  User?
  group Group?
}

enum PASSBOOK_ENTRY_OF {
  USER
  GROUP
  CLUB
}
